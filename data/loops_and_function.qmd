---
title: "Activities"
format: html
editor: visual
---

```{r}
library(tidyverse)
```

## Part 1

Task 1

```{r}
weekdays <- c("Monday","Tuesday",
              "Wednesday","Thursday",
              "Friday","Saturday","Sunday"
              )
transect <- c("Transect A","Transect B","Transect C")

#Create a matrix

out_matrix <- matrix(nrow = length(weekdays),ncol = length(transect))


for (i in seq_along(weekdays)){
  for(j in seq_along(transect)){
    out_matrix[i,j] <- paste(weekdays[i],
                             "-",transect[j])
  }
}
```

Task 2

```{r}
force <- function(mass,acceleration){
  f = mass*acceleration
  print(paste("The resulting force is",f,"Newtons."))
}

force(10,2)
```

Task 3

```{r}
# Data frame fish_parms

fish_parms <- data.frame(sci_name = c("Chanos chanos",
                                      "Sphyraena barracuda",
                                      "Caranax ignobilis"),
                         common_name = c("Milkfish",
                                         "Great barracuda",
                                         "Giant trevally"),
                         a_est = c(0.0905,0.0181,0.0353),
                         b_est = c(2.52,3.27,3.05))

## Function as fish_weight

fish_weight <- function(fish_name,tot_length){
  for (i in seq_along(fish_parms$common_name)){
     if (fish_name == fish_parms$common_name[i]){
      weight<- (fish_parms$a_est[i])*(tot_length^fish_parms$b_est[i])
      print(weight)
     } 
  }
}

## Much easier way to do and less complicated
# use filter

fish_weight <- function(fish_name,tot_length){
  x <- filter(fish_parms,common_name == fish_name)
  x$a_est*(tot_length^x$b_est)
}


#Vector of lengths
milkfish_lengths <- seq(0,100,1)
milkfish_weights <- fish_weight("Milkfish",milkfish_lengths)
```

Task 4

```{r}
wave_power <- function(wave_height,period_sec){
  (0.5*wave_height^2)*period_sec
}

waveheight <- seq(0,3,0.2)
wave_power(waveheight,8)
```

Task 5

```{r}
wave_energy <- function(water_depth,wave_height,period_sec){
  if( water_depth > 12){
    p_deep = (0.5*wave_height^2)*period_sec
    print(p_deep)
    message("Deep water equation used")
  } else if (water_depth <= 12){
    p_shallow = (0.81*wave_height^2)*period_sec
    print(p_shallow)
    message("Shallow water")
  }
}
```
